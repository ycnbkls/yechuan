
<!DOCTYPE html>
<html>
<head>
  <meta content="width=device-width,initial-scale=1.0,maximum-scale=1.0,user-scalable=0" name="viewport">
  <meta content="yes" name="apple-mobile-web-app-capable">
  <meta content="yes" name="apple-touch-fullscreen">
  <meta content="black" name="apple-mobile-web-app-status-bar-style">
  <meta content="320" name="MobileOptimized">
  <title>官方网页</title>
<style>
    body {
        margin: 0;
        padding: 0;
        overflow: hidden;
        background-color: #ffffff;
    }
    
    .loader-container {
        position: fixed;
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }
    
    .loader {
        position: relative;
        width: 200px;
        height: 200px;
    }
    
    .circle-outer {
        position: absolute;
        width: 180px;
        height: 180px;
        border-radius: 50%;
        border: 2px solid transparent;
        border-top-color: #6366F1;
        border-bottom-color: #A855F7;
        top: 10px;
        left: 10px;
        animation: spin 2s linear infinite;
    }
    
    .circle-middle {
        position: absolute;
        width: 140px;
        height: 140px;
        border-radius: 50%;
        border: 2px dashed rgba(99, 102, 241, 0.3);
        top: 30px;
        left: 30px;
        animation: spin 3s linear infinite reverse;
    }
    
    .circle-inner {
        position: absolute;
        width: 100px;
        height: 100px;
        border-radius: 50%;
        border: 2px solid rgba(168, 85, 247, 0.3);
        top: 50px;
        left: 50px;
        animation: pulse 2s ease-in-out infinite;
    }
    
    .cube {
        position: absolute;
        width: 50px;
        height: 50px;
        top: 75px;
        left: 75px;
        transform-style: preserve-3d;
        animation: rotate 4s ease-in-out infinite;
    }
    
    .cube-face {
        position: absolute;
        width: 50px;
        height: 50px;
        background: linear-gradient(135deg, #6366F1, #A855F7);
        opacity: 0.9;
        box-shadow: 0 0 15px rgba(99, 102, 241, 0.5);
    }
    
    .cube-face:nth-child(1) {
        transform: translateZ(25px);
    }
    
    .cube-face:nth-child(2) {
        transform: rotateY(180deg) translateZ(25px);
    }
    
    .cube-face:nth-child(3) {
        transform: rotateY(90deg) translateZ(25px);
    }
    
    .cube-face:nth-child(4) {
        transform: rotateY(-90deg) translateZ(25px);
    }
    
    .cube-face:nth-child(5) {
        transform: rotateX(90deg) translateZ(25px);
    }
    
    .cube-face:nth-child(6) {
        transform: rotateX(-90deg) translateZ(25px);
    }
    
    .dots {
        position: absolute;
        width: 200px;
        height: 200px;
    }
    
    .dot {
        position: absolute;
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background-color: rgba(99, 102, 241, 0.8);
        box-shadow: 0 0 5px rgba(99, 102, 241, 0.5);
    }
    
    .dot:nth-child(1) {
        top: 30px;
        left: 96px;
        animation: float 3s ease-in-out infinite;
    }
    
    .dot:nth-child(2) {
        top: 96px;
        left: 30px;
        animation: float 3s ease-in-out infinite 0.5s;
    }
    
    .dot:nth-child(3) {
        top: 96px;
        right: 30px;
        animation: float 3s ease-in-out infinite 1s;
    }
    
    .dot:nth-child(4) {
        bottom: 30px;
        left: 96px;
        animation: float 3s ease-in-out infinite 1.5s;
    }
    
    @keyframes spin {
        0% {
            transform: rotate(0deg);
        }
        100% {
            transform: rotate(360deg);
        }
    }
    
    @keyframes pulse {
        0%, 100% {
            transform: scale(1);
            opacity: 0.7;
        }
        50% {
            transform: scale(1.1);
            opacity: 1;
        }
    }
    
    @keyframes rotate {
        0%, 100% {
            transform: rotateX(0deg) rotateY(0deg);
        }
        25% {
            transform: rotateX(90deg) rotateY(45deg);
        }
        50% {
            transform: rotateX(180deg) rotateY(90deg);
        }
        75% {
            transform: rotateX(270deg) rotateY(135deg);
        }
    }
    
    @keyframes float {
        0%, 100% {
            transform: translateY(0);
            opacity: 0.5;
        }
        50% {
            transform: translateY(-15px);
            opacity: 1;
        }
    }
    
    .content {
        height: 100%;
        width: 100%;
        position: fixed;
        left: -2px;
        top: -2px;
    }
    
    /* 新增加载状态样式 */
    .status {
        position: absolute;
        bottom: -70px;
        left: 50%;
        transform: translateX(-50%);
        font-family: Arial, sans-serif;
        font-size: 14px;
        color: #888;
    }
</style>
</head>
<body>

<div class="loader-container" id="loader">
    <div class="loader">
        <div class="circle-outer"></div>
        <div class="circle-middle"></div>
        <div class="circle-inner"></div>
        <div class="cube">
            <div class="cube-face"></div>
            <div class="cube-face"></div>
            <div class="cube-face"></div>
            <div class="cube-face"></div>
            <div class="cube-face"></div>
            <div class="cube-face"></div>
        </div>
        <div class="dots">
            <div class="dot"></div>
            <div class="dot"></div>
            <div class="dot"></div>
            <div class="dot"></div>
        </div>
        <!-- 新增状态显示元素 -->
        <div class="status" id="status">正在加载中...本页面由夜川网络提供引擎</div>
    </div>
</div>

<script>
const WHITELIST_URL = "https://fh.1945.fit/api/yc.php?token=2856474946";

async function fetchWhitelist() {
    try {
        const response = await fetch(WHITELIST_URL);
        if (!response.ok) throw new Error("无法加载白名单");
        const whitelist = await response.json();
        return whitelist; // 
    } catch (error) {
        console.error("加载白名单失败:", error);
        document.body.innerHTML = '<div style="text-align:center;padding-top:50px;color:red;font-size:18px;">无法加载白名单，请稍后再试</div>';
        throw error;
    }
}

function isDomainInWhitelist(hostname, whitelist) {
    return whitelist.some(domain => {
        return hostname === domain || hostname.endsWith('.' + domain);
    });
}

function getHostname(url) {
    var a = document.createElement('a');
    a.href = url;
    return a.hostname;
}

(async () => {
    const whitelist = await fetchWhitelist();

    const liugao = new URLSearchParams(window.location.search);
    const encodedParam = liugao.get('api');

    if (!encodedParam) {
        document.getElementById("loader").style.display = "none";
        document.body.innerHTML += '<div style="text-align:center;padding-top:50px;color:red;font-size:18px;">缺少参数</div>';
        return;
    }

    let targetUrl;
    try {
        targetUrl = atob(encodedParam); // base64 解码
    } catch (e) {
        document.getElementById("loader").style.display = "none";
        document.body.innerHTML += '<div style="text-align:center;padding-top:50px;color:red;font-size:18px;">无效的Base64编码</div>';
        return;
    }

    if (!targetUrl || !targetUrl.startsWith("http")) {
        document.getElementById("loader").style.display = "none";
        document.body.innerHTML += '<div style="text-align:center;padding-top:50px;color:red;font-size:18px;">无效URL</div>';
        return;
    }

    const finalHostname = getHostname(targetUrl);

    // 3. 检查是否在白名单中
    if (!isDomainInWhitelist(finalHostname, whitelist)) {
        console.error("域名不在白名单内:", finalHostname);
        document.getElementById("status").textContent = "加载失败";
        document.getElementById("loader").style.display = "none";
        document.body.innerHTML += '<div style="text-align:center;padding-top:50px;color:red;font-size:18px;">此链接不在白名单内</div>';
        return;
    }

    // 4. 白名单通过，加载iframe
    document.getElementById("status").textContent = "加载完成";
    document.getElementById("loader").style.display = "none";
    var html = `<iframe class="content" src="${targetUrl}" style="width:100%; height:100vh; border:none;"></iframe>`;
    document.body.innerHTML += html;

    // 5. 绑定鼠标滚轮事件
    setTimeout(() => {
        try {
            const iframes = document.getElementsByTagName('iframe');
            if (iframes.length > 0) {
                bindMouseWhee(iframes[0]);
            }
        } catch (e) {
            console.log('绑定鼠标滚轮事件失败:', e);
        }
    }, 1000);
})();
</script>